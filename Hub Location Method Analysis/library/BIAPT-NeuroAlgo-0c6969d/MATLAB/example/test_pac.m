%% Loading a .set file
% This will allow to load a .set file into a format that is amenable to analysis
% The first argument is the name of the .set you want to load and the
% second argument is the path of the folder containing that .set file
% Here I'm getting it programmatically because my path and your path will
% be different.
[filepath,name,ext] = fileparts(mfilename('fullpath'));
test_data_path = strcat(filepath,'/test_data');
recording = load_set('test_data.set',test_data_path);
%{ 
    The recording class is structured as follow:
    recording.data = an (channels, timepoints) matrix corresponding to the EEG
    recording.length_recoding = length in timepoints of recording
    recording.sampling_rate = sampling frequency of the recording
    recording.number_channels = number of channels in the recording
    recording.channels_location = structure containing all the data of the channels (i.e. labels and location in 3d space)
    recording.creation_data = timestamp in UNIX format of when this class was created
%}

% Phase Amplitude Coupling (PAC)
window_size = 10;
low_frequency_bandwith =[0.1 1];
high_frequency_bandwith = [8 13];
number_bins = 18;
step_size = 10;
result_pac = na_phase_amplitude_coupling(recording, window_size, step_size, low_frequency_bandwith, high_frequency_bandwith, number_bins);


% Print the figure generated by PAC
rpt = result_pac.data.ratio_peak_through_all;
modulogram = result_pac.data.modulogram_all;
plot_pac(rpt, modulogram, 'Ratio Peak Through Both');

rpt = result_pac.data.ratio_peak_through_anterior;
modulogram = result_pac.data.modulogram_anterior;
plot_pac(rpt, modulogram, 'Ratio Peak Through Anterior');

rpt = result_pac.data.ratio_peak_through_posterior;
modulogram = result_pac.data.modulogram_posterior;
plot_pac(rpt, modulogram, 'Ratio Peak Through Posterior');

function plot_pac(rpt, modulogram, pac_title)
    figure;
    subplot(2,1,1)
    plot(rpt, 'LineWidth',5);
    xlabel('10 Seconds Segment');
    ylabel('Ratio Peak Through')
    title(pac_title);
    subplot(2,1,2)
    imagesc(modulogram);
    ylabel('Phase');
    ylimit = get(gca,'YLim');
    set(gca,'YTick',linspace(ylimit(1),ylimit(2),3))
    set(gca,'YTicklabel',{'-Pi' '0' 'Pi'})
    xlabel('Bins');
    colorbar()
end